defaults: &defaults
  working_directory: ~/clark-gateway
  docker:
    - image: cyber4all/circleci-aws:node-alpine
orbs:
  node: circleci/node@3.0.0
  docker: circleci/docker@1.4.0
commands:
  install-docker: docker/install-docker
version: 2.1
jobs:
  build: 
    <<: *defaults
    steps:
      - checkout
      - install-docker
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            npm install
      - run:
          name: Build Image
          command: | 
            docker build -t clark-gateway:$CIRCLE_SHA1 -f Dockerfile.prod .
      - run: 
          name: Login to docker
          command: docker login -u ${DOCKER_USERNAME} -p "${DOCKER_PASSWORD}"
      - run: 
          name: Publish Image
          command: | 
            docker tag clark-gateway:$CIRCLE_SHA1 "${DOCKER_USER_ORG}/clark-gateway:${CIRCLE_SHA1}"
            docker push "${DOCKER_USER_ORG}/clark-gateway:${CIRCLE_SHA1}"
  deploy-production:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/clark-gateway
      - checkout
      - install-docker
      - setup_remote_docker
      - run: 
          name: Login to docker
          command: docker login -u ${DOCKER_USERNAME} -p "${DOCKER_PASSWORD}"
      - run: 
          name: Pull image
          command: docker pull "${DOCKER_USER_ORG}/clark-gateway:${CIRCLE_SHA1}"
      - run: 
          name: Publish image
          command: |
            export SEMVER=$(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            docker tag "${DOCKER_USER_ORG}/clark-gateway:${CIRCLE_SHA1}" "${DOCKER_USER_ORG}/clark-gateway:${SEMVER}"
            docker tag "${DOCKER_USER_ORG}/clark-gateway:${CIRCLE_SHA1}" "${DOCKER_USER_ORG}/clark-gateway:latest"
            docker push "${DOCKER_USER_ORG}/clark-gateway:${SEMVER}"
            docker push "${DOCKER_USER_ORG}/clark-gateway:latest"
workflows:
  version: 2.1
  build:
    jobs:
      - build:
          context:
            - DockerHub
          filters:
            branches:
              ignore: /master/
  deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /master/
      - deploy-production:
          requires:
            - build
          context:
            - DockerHub
          filters:
            branches:
              only: /master/